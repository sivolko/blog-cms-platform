rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Functions for common checks
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isAuthor() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'author';
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin();
      allow update: if isAdmin() || request.auth.uid == userId;
      allow delete: if isAdmin();
    }

    // Posts collection
    match /posts/{postId} {
      allow read: if true;
      allow create: if isAdmin() || isAuthor();
      allow update: if isAdmin() || 
        (isAuthor() && resource.data.authorId == request.auth.uid);
      allow delete: if isAdmin() || 
        (isAuthor() && resource.data.authorId == request.auth.uid);

      // Comments subcollection
      match /comments/{commentId} {
        allow read: if true;
        allow create: if isAuthenticated();
        allow update, delete: if isAdmin() || 
          request.auth.uid == resource.data.userId;
      }
    }

    // Categories collection
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Tags collection
    match /tags/{tagId} {
      allow read: if true;
      allow write: if isAdmin() || isAuthor();
    }

    // Analytics collection
    match /analytics/{docId} {
      allow read: if isAdmin();
      allow write: if false;  // Only written to by Cloud Functions
    }
  }
}